Bddeco <- read.csv("~/économétrie projet emprique/Bddeco.csv", sep=";")
View(Bddeco)
données = data.frame(Bddeco$quantite_substance,Bddeco$substance,Bddeco$classification,Bddeco$cas,Bddeco$code_postal_acheteur,Bddeco$amm)
colnames(données)=c('quantite_pesticide','type_de_pesticide','classification','cas','code_postal_acheteur','amm')
View(données)
View(données)
summary(données)
colSums(is.na(données))
setwd("~/économétrie projet emprique/BNV_D_2020")
setwd("~/économétrie projet emprique")
setwd("~/économétrie projet emprique/BNV_D_2020")
model1 <- lm(quantite_pesticide ~ type_de_pesticide + classification + cas + code_postal_acheteur + amm, data = données)
DATA <- na.omit(données)
model1 <- lm(quantite_pesticide ~ type_de_pesticide + classification + cas + code_postal_acheteur + amm, data = données)
model1 <- lm(quantite_pesticide ~ type_de_pesticide + classification + cas + code_postal_acheteur + amm, data = DATA)
summary(DATA)
View(données)
View(données)
df_subset <- subset(df, 1:500)
df_subset <- subset(DATA, 1:500)
données <- subset(données, 1:500)
DATA_subset <- subset(DATA, 1:500)
model <- lm(y ~ x, data = données)
model <- lm(quantite_pesticide ~ x, data = données)
model <- lm(quantite_pesticide ~ type_de_pesticide, data = données)
as.data.frame(données)
read.csv(Bddeco)
read.csv(données)
bddeco_sub <- subset(Bddeco, select = c(quantite_pesticide, type_de_pesticide, classification, cas, code_postal_acheteur, amm))
bddeco_sub <- subset(données, select = c(quantite_pesticide, type_de_pesticide, classification, cas, code_postal_acheteur, amm))
modele_lm <- lm(quantite_pesticide ~ type_de_pesticide + classification + cas + code_postal_acheteur + amm, data = bddeco_sub)
summary bddeco_sub
summary (bddeco_sub)
bddeco_sub$quantite_pesticide <- as.numeric(bddeco_sub$quantite_pesticide)
bddeco_sub$code_postal_acheteur <- as.numeric(bddeco_sub$code_postal_acheteur)
summary(bddeco_sub)
bddeco_sub$quantite_pesticide <- as.numeric(bddeco_sub$classification)
bddeco_sub$code_postal_acheteur <- as.numeric(bddeco_sub$amm)
summary(bddeco_sub)
bddeco_sub$cas <- as.numeric(bddeco_sub$cas)
bddeco_sub$ammr <- as.numeric(bddeco_sub$amm)
bddeco_sub$amm <- as.numeric(bddeco_sub$amm)
summary(bddeco_sub)
bddeco_sub$amm <- as.numeric(bddeco_sub$amm)
summary(bddeco_sub)
bddeco_sub$type_de_pesticide <- as.numeric(bddeco_sub$type_de_pesticide)
summary(bddeco_sub)
bddeco_sub$classification <- as.numeric(bddeco_sub$classification)
modele_lm <- lm(quantite_pesticide ~ type_de_pesticide + classification + cas + code_postal_acheteur + amm, data = bddeco_sub)
modele_lm <- lm(quantite_pesticide ~ type_de_pesticide + classification + code_postal_acheteur + amm, data = bddeco_sub)
str(bddeco_sub)
summary(DATA)
data <- na.omit(bddeco_sub)
View(data)
BNVD_TRACABILITE_20221016_ACHAT_CP_SUBSTANCE_MARTINIQUE_2021 <- read.csv("~/économétrie projet emprique/BNVD_TRACABILITE_20221016_ACHAT_CP_SUBSTANCE_MARTINIQUE_2021.csv", sep=";")
View(BNVD_TRACABILITE_20221016_ACHAT_CP_SUBSTANCE_MARTINIQUE_2021)
setwd("~/économétrie projet emprique")
BNVD_2010 <- read.delim2("~/économétrie projet emprique/BNV_D_2020/BNVD_2010.txt")
View(BNVD_2010)
gc()
BNVD_TRACABILITE_20221016_ACHAT_FR_SUBSTANCE_2021 <- read.csv("~/économétrie projet emprique/BNVD_TRACABILITE_20221016_ACHAT_FR_SUBSTANCE_2021.csv", sep=";")
View(BNVD_TRACABILITE_20221016_ACHAT_FR_SUBSTANCE_2021)
Bddeco <- read.csv("~/économétrie projet emprique/Bddeco.csv", sep=";")
View(Bddeco)
données = data.frame(Bddeco[,6],Bddeco[,7])
View(données)
summary(données)
colnames(données)=c('quantite_pesticide','classification')
summary(données)
is.numeric(data$quantite_pesticide)
is.numeric(données$quantite_pesticide)
unique(données$quantite_pesticide)
grep("[^0-9.]", données$quantite_pesticide)
données$quantite_pesticide <- gsub("[^0-9.]", "", données$quantite_pesticide)
données$quantite_pesticide <- as.numeric(données$quantite_pesticide)
is.numeric(données$quantite_pesticide)
données$quantite_pesticide <- as.numeric(données$quantite_pesticide)
summary(données)
donnees_clean <- na.omit(donnees[c("quantite_pesticide", "classification")])
donnees_clean <- na.omit(données[c("quantite_pesticide", "classification")])
View(donnees_clean)
summary(données_clean)
summary(donnes_clean)
summary(donnees_clean)
donnees$classif_fac <- factor(donnees_clean$classification, levels = c("Env A", "Santé A", "Autre", "Env B", "CMR"))
donnees_clean$classif_fac <- factor(donnees_clean$classification, levels = c("Env A", "Santé A", "Autre", "Env B", "CMR"))
var_binaires <- model.matrix(~ classif_fac + 0, data = donnees_clean)
View(var_binaires)
colnames(var_binaires) <- levels(donnees_clean$classif_fac)
donnees_binaires <- cbind(donnees_clean, var_binaires)
View(donnees_binaires)
donnéesfinales = data.frame(donnees_binaires[,1],donnees_binaires[5,9])
donnéesfinales = data.frame(donnees_binaires[,1],donnees_binaires[,4],donnees_binaires[,5],donnees_binaires[,6],donnees_binaires[,7],donnees_binaires[,8])
View(donnéesfinales)
colnames(donnéesfinales)=c('quantité','Env A','Santé A','Autre','Env B','CMR')
summary(donnéesfinales)
names(donnéesfinales)[1] <- "quantite"
names(donnéesfinales) <- "donneesfinales"
names(donnéesfinales)[1] <- "quantite"
names(donnéesfinales)[2] <- "EnvA"
names(donnéesfinales)[3] <- "SanteA"
names(donnéesfinales)[4] <- "Autre"
names(donnéesfinales)[5] <- "EnvB"
names(donnéesfinales)[6] <- "CMR"
modele_reg <- lm(quantite ~ EnvA + SanteA + Autre + EnvB + CMR, data = donnéesfinales)
summary(donnéesfinales)
summary(modele_reg)
donnéesfinales$taux_de_redevance <- ifelse(donnees_binaires$classification == "CMR", 9,
ifelse(donnees_binaires$classification == "SanteA", 5.1,
ifelse(donnees_binaires$classification == "EnvA", 3,
ifelse(donnees_binaires$classification == "EnvB", 0.9, 0))))
# Création de la variable "taux_redevance"
donnéesfinales$taux_redevance <- ifelse(donnees_binaires$classification == "CMR", 9,
ifelse(donnees_binaires$classification == "SanteA", 5.1,
ifelse(donnees_binaires$classification == "EnvA", 3,
ifelse(donnees_binaires$classification == "EnvB", 0.9,
ifelse(donnees_binaires$classification == "autre", 0, NA)))))
TauxRedevance <- ifelse(donnéesfinales$classification == "CMR", 9,
ifelse(donnéesfinales$classification == "SanteA", 5.1,
ifelse(donnéesfinales$classification == "EnvA", 3,
ifelse(donnéesfinales$classification == "EnvB", 0.9,
ifelse(donnéesfinales$classification == "Autre", 0, NA)))))
donnéesfinales <- cbind(donnéesfinales, TauxRedevance)
TauxRedevance <- ifelse(donnees_binaires$classification == "CMR", 9,
ifelse(donnees_binaires$classification == "SanteA", 5.1,
ifelse(donnees_binaires$classification == "EnvA", 3,
ifelse(donnees_binaires$classification == "EnvB", 0.9,
ifelse(donnees_binaires$classification == "Autre", 0, NA)))))
donnéesfinales <- cbind(donnéesfinales, TauxRedevance)
TauxRedevance <- ifelse(donnees_binaires$classification == "CMR", 9,
+                         ifelse(donnees_binaires$classification == "Santé A", 5.1,
+                                ifelse(donnees_binaires$classification == "Env A", 3,
+                                       ifelse(donnees_binaires$classification == "Env B", 0.9,
+                                              ifelse(donnees_binaires$classification == "Autre", 0, NA)))))
donnéesfinales <- cbind(donnéesfinales, TauxRedevance)
donneesopti = data.frame(donnéesfinales[,1],donnéesfinales[,2],donnéesfinales[,3],donnéesfinales[,4],donnéesfinales[,5],donnéesfinales[,6],donnéesfinales[,10])
View(donneesopti)
colnames(donneesopti)=c('quantite','EnvA','SanteA','Autre','EnvB','CMR','TauxRedevance')
modelreg1 <- lm(quantite ~ EnvA + SanteA + Autre + EnvB + CMR + TauxRedevance, data = donneesopti)
summary(modelereg1)
summary(modelreg1)
donneesopti$EnvA_binaire <- as.numeric(donnees_binaires$classification == "Env A")
donneesopti$SanteA_binaire <- as.numeric(donnees_binaires$classification == "Santé A")
donneesopti$Autre_binaire <- as.numeric(donnees_binaires$classification == "autres")
donneesopti$EnvB_binaire <- as.numeric(donnees_binaires$classification == "Env B")
donneesopti$CMR_binaire <- as.numeric(donnees_binaires$classification == "CMR")
# Calculer le taux de redevance pour chaque ligne
donneesoptis$TauxRedevance <-
donneesopti$EnvA_binaire * 3 +
donneesopti$SanteA_binaire * 5.1 +
donneesopti$Autre_binaire * 0 +
donneesopti$EnvB_binaire * 0.9 +
donneesopti$CMR_binaire * 9
> donneesopti$EnvA_binaire <- as.numeric(donnees_binaires$classification == "Env A")
> donneesopti$EnvA_binaire <- as.numeric(donnees_binaires$classification == "Env A")
summary(donneesopti)
donneesopti$EnvA_binaire <- NULL
donneesopti$EnvB_binaire <- NULL
donneesopti$SanteA_binaire <- NULL
donneesopti$CMR_binaire <- NULL
donneesopti$Autre_binaire <- NULL
summary(donneesopti)
donneeopti$TauxRedevance <- as.numeric(donneesopti$TauxRedevance)
donneesopti$TauxRedevance <- as.numeric(donneesopti$TauxRedevance)
summary(donneesopti)
modelR2 <- lm(quantite ~ EnvA + SanteA + Autre + EnvB + CMR + TauxRedevance, data = donneesopti)
summary(modelR2)
donneesopti2 <- na.omit(donneesopti)
modelR3 <- lm(quantite ~ EnvA + SanteA + Autre + EnvB + CMR + TauxRedevance, data = donneesopti2)
summary(modelR3)
donneesopti2$CMR <- NULL
View(donneesopti2)
Modelreg4<- lm(quantite ~ EnvA + SanteA + Autre + EnvB + TauxRedevance, data = donneesopti2)
summary(Modelreg4)
sum(is.na(donneesopti$CMR))
View(modelreg1)
plot(modelreg1)
plot(modelreg1)
summary(modelreg1)
library(dplyr)
donneesopti <- donneesopti %>%
mutate(taxe = TauxRedevance * quantite)
modele <- lm(quantite ~ EnvA + SanteA + Autre + EnvB + CMR + TauxRedevance + taxe, data = donneesopti)
summary(modele)
library(corrplot)
library(corrplot)
install.packages("corrplot")
library(corrplot)
M <- cor(donneesopti[,c("EnvA", "SanteA", "Autre", "EnvB", "CMR", "TauxRedevance", "taxe")])
corrplot(M, method = "color", type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
summary (modele)
summary(donneesopti)
summary(modelreg1)
library(lmtest)
install.packages(lmtest)
install.packages("lmtest")
white.test <- bptest(modele)
white.test <- bptest(modele)
library(lmtest)
white.test <- bptest(modele)
white.test
residus <- resid(modele)
shapiro.test(residus)
library(MASS)
modele_robuste <- rlm(quantite ~ EnvA + SanteA + Autre + EnvB + CMR + TauxRedevance + taxe, data = donneesopti)
install.packages("MASS")
install.packages("MASS")
library(MASS)
modele_robuste <- rlm(quantite ~ EnvA + SanteA + Autre + EnvB + CMR + TauxRedevance + taxe, data = donneesopti)
modele_robuste <- rlm(quantite ~ EnvA + SanteA + Autre + EnvB + taxe, data = donneesopti)
summary(modele_robuste)
summary(modele_robuste)
summary(donneesopti)
donneesopti$log_quantite <- log(donneesopti$quantite)
donneesopti$log_EnvA <- log(donneesopti$EnvA)
donneesopti$log_SanteA <- log(donneesopti$SanteA)
donneesopti$log_Autre <- log(donneesopti$Autre)
donneesopti$log_EnvB <- log(donneesopti$EnvB)
donneesopti$log_taxe <- log(donneesopti$taxe)
modele_log <- lm(log_quantite ~ log_EnvA + log_SanteA + log_Autre + log_EnvB + log_taxe, data = donneesopti)
sum(is.na(donneesopti))
sum(is.na(donneesopti))
modele_log <- lm(log_quantite ~ log_EnvA + log_SanteA + log_Autre + log_EnvB + log_taxe, data = donneesopti)
donneesopti <- na.omit(donneesopti)
modele_log <- lm(log_quantite ~ log_EnvA + log_SanteA + log_Autre + log_EnvB + log_taxe, data = donneesopti)
summary(modelreg1)
summary(modele_reg)
summary(modele)
donnees$log_EnvA <- log(donnees$EnvA + 1)
donneesopti$log_EnvA <- log(donneesopti$EnvA + 1)
donneesopti$log_SanteA <- log(donneesopti$SanteA + 1)
donneesopti$log_Autre <- log(donneesopti$Autre + 1)
donneesopti$log_EnvB <- log(donneesopti$EnvB + 1)
donneesopti$log_taxe <- log(donneesopti$taxe + 1)
donneesopti$log_quantite <- log(donneesopti$quantite + 1)
modele_log <- lm(log_quantite ~ log_EnvA + log_SanteA + log_Autre + log_EnvB + log_taxe, data = donneesopti)
summary(modele_log)
donneesopti$log_CMR <- log(donneesopti$CMR + 1)
donneesopti$log_TauxRedevance <- log(donneesopti$TauxRedevance + 1)
modele_log1 <- lm(log_quantite ~ log_EnvA + log_SanteA + log_Autre + log_EnvB + log_CMR + log_taxe, data = donneesopti)
summary(modele_log1)
white.test <- bptest(modele_reg)
library(lmtest)
white.test <- bptest(modele_reg)
View(white.test)
summary(white.test)
white.test
library(MASS)
modele_robuste1 <- rlm(log_quantite ~ log_EnvA + log_SanteA + log_Autre + log_EnvB + log_taxe, data = donneesopti, psi = psi.bisquare)
summary(modele_robuste1)
summary(modele_log)
